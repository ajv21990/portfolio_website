{"ast":null,"code":"var _jsxFileName = \"/Users/aj/Desktop/Personal_Projects/Personal_UI/portfolio2/src/components/Portfolio.js\";\nimport React from 'react';\nimport EleveightLogo from '../assets/EleveightLogo.png';\nimport RADLogo from '../assets/RadLogo.png';\nimport HRBLogo from '../assets/TempHRB.png';\nimport Slider from \"react-slick\";\nimport Elev1 from '../assets/Apply_Modal.png';\nimport Elev2 from '../assets/JobPostsPort.png';\nimport Elev3 from '../assets/JobsLandPort.png';\nimport Elev4 from '../assets/PostModalPort.png';\nimport RAD1 from '../assets/RADLogin.png';\nimport RAD2 from '../assets/RADHome.png';\nimport RAD3 from '../assets/ScooterMapRAD.png';\nimport HRB1 from '../assets/HomeRunBingoLand.png';\nimport HRB2 from '../assets/HRBingo2.png';\nimport HRB3 from '../assets/Bingo.png';\nimport { Spring } from 'react-spring/renderprops';\nimport '../stylesheets/landingHeader.css';\nexport default class Portfolio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowEleveight = () => this.setState({\n      showEleveight: true,\n      showRadiant: false,\n      showHRB: false\n    });\n\n    this.ShowRAD = () => this.setState({\n      showRadiant: true,\n      showEleveight: false,\n      showHRB: false\n    });\n\n    this.ShowHRB = () => this.setState({\n      showHRB: true,\n      showEleveight: false,\n      showRadiant: false\n    });\n\n    this.state = {\n      showEleveight: false,\n      showRadiant: false,\n      showHRB: false\n    };\n  }\n\n  render() {\n    var settings = {\n      dots: true,\n      autoplay: true\n    };\n    return React.createElement(\"div\", {\n      id: \"Portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3 title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Spring, {\n      config: {\n        tension: 280,\n        friction: 200\n      },\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, props => React.createElement(\"h5\", {\n      id: \"txtScrollHere\",\n      className: \"headerFont\",\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"My Work\")), React.createElement(\"h1\", {\n      className: \"headerFont Aliases\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Personal and Professional Projects\"), React.createElement(\"p\", {\n      className: \"bodyFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Below is a list of personal and professional projects that I have worked on as a Developer. Click the logos to learn more about the project.\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2 pictures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#txtScrollHere\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"100\",\n      alt: \"Eleveight Logo\",\n      src: EleveightLogo,\n      onClick: this.ShowEleveight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"#txtScrollHere\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"100\",\n      alt: \"Radiant Logo\",\n      src: RADLogo,\n      onClick: this.ShowRAD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"#txtScrollHere\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"75\",\n      alt: \"HRB Logo\",\n      src: HRBLogo,\n      onClick: this.ShowHRB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"pictures mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.showEleveight ? React.createElement(\"div\", {\n      id: \"EleveightSlides\",\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Slider, Object.assign({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"400\",\n      width: \"100%\",\n      alt: \"Job Post\",\n      src: Elev2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      width: \"100%\",\n      alt: \"Enter Job Post\",\n      src: Elev4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      width: \"100%\",\n      alt: \"Jobs Near User\",\n      src: Elev3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      width: \"100%\",\n      alt: \"Apply To Job\",\n      src: Elev1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"bodyFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Eleveight is the current professional project that I'm working on. Eleveight is a platform that connects at-risk students to case managers to help them get jobs, scholarships, and any help to better their lives. My role on this project is to create a feature that would have companies who use this platform create jobs for students and for said students to find these jobs and apply to them. I work the full stack on this project using MSSQL for the backend and ASP.NET/C# for the middle tier. For our front end we use React, HTML, CSS, Bootstrap, Typescript and Redux. For more information on the specific components I worked on for this project, visit my git hub at the bottom of \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#Contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"this page\")), \".\")) : \"\", this.state.showRadiant ? React.createElement(\"div\", {\n      id: \"RADSlides\",\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Slider, Object.assign({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      alt: \"Radiant Login\",\n      src: RAD1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      alt: \"Radiant Home\",\n      src: RAD2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      alt: \"Scooter Map\",\n      src: RAD3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"bodyFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"RADiant is a hackathon submission I did in a group of three for the AddiHacks hackathon. Radiant was our solution to a cleaner, greener transportation environment. In implementing our service we hoped to reduce congestion as well strengthen a sense of community within Long Beach and the surrounding southern California areas. My role on this project was implementing an interface that allowed users to see the nearest ride options near them. I implemented Google Maps using the React framework to show users the nearest scooter, bike, or car services within their specified distance. I was able to obtain the data about the services from API's provided by the hackathon. I also was tasked with a login and registration page.\")) : \"\", this.state.showHRB ? React.createElement(\"div\", {\n      id: \"HRBSlides\",\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Slider, Object.assign({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      alt: \"Job Post\",\n      src: HRB1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      alt: \"Enter Job Post\",\n      src: HRB2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300\",\n      alt: \"Jobs Near User\",\n      src: HRB3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"bodyFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Homerun Bingo is a BaseballHackDay project I worked on with fellow baseball enthusiasts. We placed third on this project out of ten competing teams. HomeRunBingo allows anyone to play along every day of the MLB season and fill out Bingo cards populated with the top Home Run hitters from across the league. When you have a player hit a Home Run, his square on your board is filled. My role in this project was figuring out a way to utilize the provided API's. I ended up using these API's to secure the previous season's homerun leaders and insert them into an array so that randomizing a user\\u2019s board would choose batters from the array and place them in an arbitrary spot on the bingo board. \")) : \"\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/aj/Desktop/Personal_Projects/Personal_UI/portfolio2/src/components/Portfolio.js"],"names":["React","EleveightLogo","RADLogo","HRBLogo","Slider","Elev1","Elev2","Elev3","Elev4","RAD1","RAD2","RAD3","HRB1","HRB2","HRB3","Spring","Portfolio","Component","constructor","props","ShowEleveight","setState","showEleveight","showRadiant","showHRB","ShowRAD","ShowHRB","state","render","settings","dots","autoplay","tension","friction","opacity"],"mappings":"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","sourcesContent":["import React from 'react'\nimport EleveightLogo from '../assets/EleveightLogo.png'\nimport RADLogo from '../assets/RadLogo.png'\nimport HRBLogo from '../assets/TempHRB.png'\nimport Slider from \"react-slick\";\nimport Elev1 from '../assets/Apply_Modal.png'\nimport Elev2 from '../assets/JobPostsPort.png'\nimport Elev3 from '../assets/JobsLandPort.png'\nimport Elev4 from '../assets/PostModalPort.png'\nimport RAD1 from '../assets/RADLogin.png'\nimport RAD2 from '../assets/RADHome.png'\nimport RAD3 from '../assets/ScooterMapRAD.png'\nimport HRB1 from '../assets/HomeRunBingoLand.png'\nimport HRB2 from '../assets/HRBingo2.png'\nimport HRB3 from '../assets/Bingo.png'\nimport { Spring } from 'react-spring/renderprops'\n\n\nimport '../stylesheets/landingHeader.css'\n\nexport default class Portfolio extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEleveight: false,\n            showRadiant: false,\n            showHRB: false\n        }\n    }\n\n    ShowEleveight = () => this.setState({ showEleveight: true, showRadiant: false, showHRB: false })\n\n    ShowRAD = () => this.setState({ showRadiant: true, showEleveight: false, showHRB: false })\n\n    ShowHRB = () => this.setState({ showHRB: true, showEleveight: false, showRadiant: false })\n\n\n\n\n    render() {\n        var settings = {\n            dots: true,\n            autoplay: true\n        }\n        return (\n            <div id=\"Portfolio\">\n                <div className=\"header\">\n                    <div className=\"col-md-6 offset-md-3 title\">\n                        <Spring\n                            config={{ tension: 280, friction: 200 }}\n                            from={{ opacity: 0 }}\n                            to={{ opacity: 1 }}>\n                            {props => <h5 id=\"txtScrollHere\" className=\"headerFont\" style={props}>My Work</h5>}\n                        </Spring>\n                        <h1 className=\"headerFont Aliases\">Personal and Professional Projects</h1>\n                        <p className=\"bodyFont\">Below is a list of personal and professional projects that I have worked on as a Developer. Click the logos to learn\n                        more about the project.</p>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 offset-md-2 pictures\">\n                            <a href=\"#txtScrollHere\"><img height=\"100\" alt=\"Eleveight Logo\" src={EleveightLogo} onClick={this.ShowEleveight} /></a>\n                            <a href=\"#txtScrollHere\"><img height=\"100\" alt=\"Radiant Logo\" src={RADLogo} onClick={this.ShowRAD} /></a>\n                            <a href=\"#txtScrollHere\"><img height=\"75\" alt=\"HRB Logo\" src={HRBLogo} onClick={this.ShowHRB} /></a>\n\n                        </div>\n                        <div className=\"pictures mt-4\">\n                            {this.state.showEleveight ?\n                                <div id=\"EleveightSlides\" className=\"col-md-4\">\n                                    <div className=\"container\">\n                                        <Slider {...settings}>\n                                            <div>\n                                                <img height=\"400\" width=\"100%\" alt=\"Job Post\" src={Elev2} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" width=\"100%\" alt=\"Enter Job Post\" src={Elev4} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" width=\"100%\" alt=\"Jobs Near User\" src={Elev3} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" width=\"100%\" alt=\"Apply To Job\" src={Elev1} />\n                                            </div>\n                                        </Slider>\n                                    </div>\n                                    <br />\n                                    <p className=\"bodyFont\">Eleveight is the current professional project that I'm working on. Eleveight is a platform that connects at-risk students to case managers to help them get jobs, scholarships, and any help to better\n                                    their lives. My role on this project is to create a feature that would have companies who use this platform create jobs for students and for said students to find these jobs and apply to them. I work the full stack on this project\n                                    using MSSQL for the backend and ASP.NET/C# for the middle tier. For our front end we use React, HTML, CSS, Bootstrap, Typescript and Redux. For more information on the specific components\n                                I worked on for this project, visit my git hub at the bottom of <span><a href=\"#Contact\">this page</a></span>.</p>\n                                </div>\n                                : \"\"}\n                            {this.state.showRadiant ?\n                                <div id=\"RADSlides\" className=\"col-md-4\">\n                                    <div className=\"container\">\n                                        <Slider {...settings}>\n                                            <div>\n                                                <img height=\"300\" alt=\"Radiant Login\" src={RAD1} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" alt=\"Radiant Home\" src={RAD2} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" alt=\"Scooter Map\" src={RAD3} />\n                                            </div>\n                                        </Slider>\n                                    </div>\n                                    <br />\n                                    <p className=\"bodyFont\">RADiant is a hackathon submission I did in a group of three for the AddiHacks hackathon. Radiant was our solution to a cleaner, greener transportation environment. In implementing our service we hoped to\n                                    reduce congestion as well strengthen a sense of community within Long Beach and the surrounding southern California areas. My role on this project was implementing an interface that allowed users to see the nearest ride options near them.\n                                    I implemented Google Maps using the React framework to show users the nearest scooter, bike, or car services within their specified distance. I was able to obtain the data about the services\n                                from API's provided by the hackathon. I also was tasked with a login and registration page.</p>\n                                </div>\n                                : \"\"}\n                            {this.state.showHRB ?\n                                <div id=\"HRBSlides\" className=\"col-md-4\">\n                                    <div className=\"container\">\n                                        <Slider {...settings}>\n                                            <div>\n                                                <img height=\"300\" alt=\"Job Post\" src={HRB1} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" alt=\"Enter Job Post\" src={HRB2} />\n                                            </div>\n                                            <div>\n                                                <img height=\"300\" alt=\"Jobs Near User\" src={HRB3} />\n                                            </div>\n                                        </Slider>\n                                    </div>\n                                    <br />\n                                    <p className=\"bodyFont\">Homerun Bingo is a BaseballHackDay project I worked on with fellow baseball enthusiasts.\n                                    We placed third on this project out of ten competing teams. HomeRunBingo allows anyone to play along every day of the MLB season\n                                    and fill out Bingo cards populated with the top Home Run hitters from across the league. When you have a player hit a Home Run, his square on your board is filled. My role in this project was figuring out a way to utilize the provided API's. I ended up using these API's to secure the previous season's homerun leaders and insert them into an array so that randomizing a user’s board would\n                                choose batters from the array and place them in an arbitrary spot on the bingo board. </p>\n                                </div>\n                                : \"\"}\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}